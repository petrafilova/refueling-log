version: '3.9'
services:
    email:
        image: 'maildev/maildev'
        ports:
            - '8082:1080'
        healthcheck:
            test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:1080/healthz || exit 1" ]
            interval: 5s
            timeout: 5s
            retries: 10

    db:
        image: 'postgres:14.5-alpine'
        environment:
            POSTGRES_DB: refueling
            POSTGRES_USER: refueling
            POSTGRES_PASSWORD: refueling123
        ports:
            - '5432:5432'
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U refueling']
            interval: 5s
            timeout: 5s
            retries: 10
        volumes:
            - postgre_refueling_data:/var/lib/postgresql/data

    backend:
        image: 'refueling-log-backend:latest'
        restart: always
        environment:
            PORT: 8080
            BASE_PATH: '/api'
            NODE_ENV: 'development'
            DATABASE_PASSWORD: 'refueling123'
            DATABASE_USER: 'refueling'
            DATABASE: 'refueling'
            DATABASE_HOST: 'db'
            DATABASE_PORT: 5432
            DATABASE_LOGGING: 'true'
            TOKEN_SIGN_KEY: 'somesecrettoken'
            TOKEN_EXPIRES_IN: 1h
            REFRESH_TOKEN_EXPIRES_IN: 10d
            EMAIL_HOST: email
            EMAIL_PORT: 1025
            EMAIL_USER:
            EMAIL_PASS:
            EMAIL_FROM: email@email.email
            CONFIRM_URL: 'http://localhost/confirm/'
            RESET_URL: 'http://localhost/reset/'
            RESET_LINK_VALIDITY: 12
            REGISTRATION_ENABLED: 'true'
        healthcheck:
            test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/api/health || exit 1" ]
            interval: 10s
            timeout: 5s
            retries: 10
        depends_on:
            db:
                condition: service_healthy
            email:
                condition: service_healthy
        labels:
            - traefik.enable=true
            - traefik.http.routers.refueling-api.rule=PathPrefix(`/api`)
            - traefik.http.routers.refueling-api.entrypoints=web
            - traefik.http.services.refueling-api.loadbalancer.server.port=8080

    frontend:
        image: 'refueling-log-frontend:latest'
        restart: always
        environment:
            NGINX_PORT: 8080
            BASE_API_URL: '/api'
        depends_on:
            backend:
                condition: service_healthy
        labels:
            - traefik.enable=true
            - traefik.http.routers.refueling-frontend.rule=PathPrefix(`/`)
            - traefik.http.routers.refueling-frontend.entrypoints=web
            - traefik.http.services.refueling-frontend.loadbalancer.server.port=8080

    traefik:
        image: traefik:v2.8.4
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
            - "--log.level=INFO"
        ports:
            - 80:80
            - 8080:8080
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
    postgre_refueling_data:
