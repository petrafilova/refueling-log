{
    "openapi": "3.0.2",
    "info": {
        "title": "Refueling-log-backend",
        "version": "0.0.1",
        "license": {
            "name": "MIT"
        },
        "description": "Refueling log and expense tracker",
        "contact": {
            "email": "tfilosk@gmail.com",
            "name": "Tomáš Filo",
            "url": "https://github.com/tfilo"
        }
    },
    "servers": [
        {
            "url": "http://localhost:3000/",
            "description": "DEV"
        },
        {
            "url": "http://localhost:8080/",
            "description": "Docker"
        }
    ],
    "tags": [
        {
            "name": "auth",
            "description": "Endpoint for registration, authentication and account management."
        },
        {
            "name": "vehicle",
            "description": "Endpoint for creating and managing core information about vehicle."
        },
        {
            "name": "vehicle-fuel",
            "description": "Endpoint for managing types of fuel per vehicle."
        },
        {
            "name": "fuel-log",
            "description": "Endpoint for refueling logs with costs tracker."
        },
        {
            "name": "expense-log",
            "description": "Endpoint for tracking other expenses related to vehicle"
        },
        {
            "name": "expense-type",
            "description": "Endpoint for managing different types of expenses."
        },
        {
            "name": "stats",
            "description": "Endpoint full of statistics about expenses and fuel consumption."
        }
    ],
    "paths": {
        "/health": {
            "get": {
                "security": [],
                "responses": {
                    "200": {
                        "description": "ok"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": ["auth"],
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": ["auth"],
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["refreshToken"],
                                "properties": {
                                    "refreshToken": {
                                        "type": "string",
                                        "format": "bearer"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful token refresh",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": ["auth"],
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful registration"
                    },
                    "409": {
                        "description": "Account already exists or email used by other account.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailableError"
                    }
                }
            }
        },
        "/auth/confirm/{uuid}": {
            "post": {
                "tags": ["auth"],
                "security": [],
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful account confirmation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/auth/password": {
            "put": {
                "tags": ["auth"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Successful password update"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/auth/delete": {
            "post": {
                "tags": ["auth"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Successful user deletion"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/vehicle": {
            "get": {
                "tags": ["vehicle"],
                "responses": {
                    "200": {
                        "description": "List of user vehicles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SimpleVehicle"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "post": {
                "tags": ["vehicle"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateVehicle"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Vehicle created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/vehicle/{vehicleId}": {
            "get": {
                "tags": ["vehicle"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vehicleId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Single vehicle",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "tags": ["vehicle"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vehicleId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVehicle"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Vehicle updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "tags": ["vehicle"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vehicleId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Vehicle deleted"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/vehicleFuel": {
            "post": {
                "tags": ["vehicle-fuel"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateVehicleFuel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Vehicle fuel created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleFuel"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/vehicleFuel/byVehicle/{vehicleId}": {
            "get": {
                "tags": ["vehicle-fuel"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vehicleId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vehicle fuels by vehicle id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SimpleVehicleFuel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/vehicleFuel/{vehicleFuelId}": {
            "get": {
                "tags": ["vehicle-fuel"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vehicleFuelId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Single vehicle fuel",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleFuel"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "tags": ["vehicle-fuel"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vehicleFuelId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVehicleFuel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Vehicle fuel updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleFuel"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "tags": ["vehicle-fuel"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vehicleFuelId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Vehicle fuel deleted"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/fuelLog": {
            "post": {
                "tags": ["fuel-log"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFuelLog"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Fuel log created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FuelLog"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/fuelLog/{fuelLogId}": {
            "get": {
                "tags": ["fuel-log"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fuelLogId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Single fuel log",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FuelLog"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "tags": ["fuel-log"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fuelLogId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFuelLog"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Fuel log updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FuelLog"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "tags": ["fuel-log"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "fuelLogId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Fuel log deleted"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/fuelLog/byVehicleFuel/{vehicleFuelId}": {
            "post": {
                "tags": ["fuel-log"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vehicleFuelId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Pagination"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "List of fuel logs by vehicle fuel id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SimpleFuelLog"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/expenseLog": {
            "post": {
                "tags": ["expense-log"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateExpenseLog"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Expense log created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseLog"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/expenseLog/{expensesLogId}": {
            "get": {
                "tags": ["expense-log"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "expensesLogId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Single expense log",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseLog"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "tags": ["expense-log"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "expensesLogId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateExpenseLog"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Expense log updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseLog"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "tags": ["expense-log"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "expensesLogId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Expense log deleted"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/expenseLog/byVehicle/{vehicleId}": {
            "post": {
                "tags": ["expense-log"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vehicleId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "page": {
                                        "type": "integer",
                                        "format": "int32",
                                        "default": 0
                                    },
                                    "pageSize": {
                                        "type": "integer",
                                        "format": "int32",
                                        "default": 10
                                    },
                                    "order": {
                                        "type": "string",
                                        "enum": ["ASC", "DESC"],
                                        "default": "DESC"
                                    },
                                    "typeId": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "List of expense logs by vehicle id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SimpleExpenseLog"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/expenseType": {
            "get": {
                "tags": ["expense-type"],
                "responses": {
                    "200": {
                        "description": "List of expenses types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExpensesType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "post": {
                "tags": ["expense-type"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateExpensesType"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Expenses type created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpensesType"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/expenseType/{expensesTypeId}": {
            "put": {
                "tags": ["expense-type"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "expensesTypeId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateExpensesType"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Expenses type updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpensesType"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "tags": ["expense-type"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "expensesTypeId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Expenses type deleted"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/stats/{vehicleId}/total": {
            "post": {
                "tags": ["stats"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vehicleId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle statistics summary",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VehicleStatistics"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/stats/{vehicleId}/expenses": {
            "post": {
                "tags": ["stats"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vehicleId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dateFrom": {
                                        "type": "string",
                                        "description": "Format YYYY-MM, default value is today - 1 year",
                                        "example": "2019-05"
                                    },
                                    "dateTo": {
                                        "type": "string",
                                        "description": "Format YYYY-MM, Default value is todays year-month",
                                        "example": "2020-05"
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Vehicle expenses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Expenses"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/stats/{vehicleId}/fuel": {
            "post": {
                "tags": ["stats"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vehicleId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "vehicleFuelId": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "dateFrom": {
                                        "type": "string",
                                        "description": "Format YYYY-MM, default value is today - 1 year",
                                        "example": "2019-05"
                                    },
                                    "dateTo": {
                                        "type": "string",
                                        "description": "Format YYYY-MM, Default value is todays year-month",
                                        "example": "2020-05"
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Vehicle fuel costs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FuelCosts"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/stats/{vehicleId}/consumption": {
            "post": {
                "tags": ["stats"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "vehicleId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "vehicleFuelId": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "dateFrom": {
                                        "type": "string",
                                        "description": "Format YYYY-MM, default value is today - 1 year",
                                        "example": "2019-05"
                                    },
                                    "dateTo": {
                                        "type": "string",
                                        "description": "Format YYYY-MM, Default value is todays year-month",
                                        "example": "2020-05"
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Vehicle fuel consumption",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FuelConsumption"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "ErrorTypeEnum": {
                "type": "string",
                "enum": [
                    "GENERAL_ERROR",
                    "DATABASE_ERROR",
                    "NOT_FOUND",
                    "VALIDATION_FAILED",
                    "INVALID_CREDENTIALS",
                    "UNIQUE_CONSTRAINT_ERROR",
                    "ACCOUNT_DOESNT_EXIST",
                    "UNABLE_TO_SENT_REG_EMAIL",
                    "EMAIL_IN_USE",
                    "CONSTRAINT_FAILED",
                    "EXPIRED_TOKEN",
                    "INVALID_TOKEN"
                ]
            },
            "FuelTypeEnum": {
                "type": "string",
                "enum": [
                    "GASOLINE",
                    "DIESEL",
                    "LPG",
                    "CNG",
                    "HYDROGEN",
                    "ELECTRICITY"
                ]
            },
            "SortOrderEnum": {
                "type": "string",
                "enum": ["ASC", "DESC"]
            },
            "LoginRequest": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 1,
                        "maxLength": 250
                    }
                }
            },
            "RegisterRequest": {
                "type": "object",
                "required": ["username", "password", "email"],
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 50
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8,
                        "maxLength": 250,
                        "description": "Should be at least 8 characters long, at least one small letter, one capital letter and one number."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 6,
                        "maxLength": 320
                    }
                }
            },
            "UpdatePasswordRequest": {
                "type": "object",
                "required": ["username", "password", "newPassword"],
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50,
                        "description": "Username of user"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 1,
                        "maxLength": 250,
                        "description": "Old password to verify this user"
                    },
                    "newPassword": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8,
                        "maxLength": 250,
                        "description": "New password for user. Should be at least 8 characters long, at least one small letter, one capital letter and one number."
                    }
                }
            },
            "TokenResponse": {
                "type": "object",
                "required": ["token", "refreshToken", "username"],
                "properties": {
                    "token": {
                        "type": "string",
                        "format": "bearer"
                    },
                    "refreshToken": {
                        "type": "string",
                        "format": "bearer"
                    },
                    "username": {
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 50
                    }
                }
            },
            "Error": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "code": {
                        "$ref": "#/components/schemas/ErrorTypeEnum"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string",
                                    "description": "Name of field with error"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Validation error message"
                                }
                            }
                        }
                    }
                }
            },
            "SimpleVehicle": {
                "type": "object",
                "required": ["id", "brand", "model", "licensePlateNo"],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "brand": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "model": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 60
                    },
                    "licensePlateNo": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 10
                    }
                }
            },
            "CreateVehicle": {
                "type": "object",
                "required": ["brand", "model", "licensePlateNo"],
                "properties": {
                    "brand": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "model": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 60
                    },
                    "licensePlateNo": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 10
                    },
                    "dateOfReg": {
                        "type": "string",
                        "format": "date"
                    },
                    "color": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "vin": {
                        "type": "string",
                        "maxLength": 17
                    }
                }
            },
            "UpdateVehicle": {
                "type": "object",
                "$ref": "#/components/schemas/CreateVehicle"
            },
            "Vehicle": {
                "type": "object",
                "required": ["id", "brand", "model", "licensePlateNo"],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "brand": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "model": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 60
                    },
                    "licensePlateNo": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 10
                    },
                    "dateOfReg": {
                        "type": "string",
                        "format": "date",
                        "example": "2005-03-22"
                    },
                    "color": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "vin": {
                        "type": "string",
                        "maxLength": 17
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    }
                }
            },
            "SimpleVehicleFuel": {
                "type": "object",
                "required": ["id", "fuel"],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "fuel": {
                        "$ref": "#/components/schemas/FuelTypeEnum"
                    }
                }
            },
            "VehicleFuel": {
                "type": "object",
                "required": ["id", "fuel", "vehicleId"],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "fuel": {
                        "$ref": "#/components/schemas/FuelTypeEnum"
                    },
                    "vehicleId": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    }
                }
            },
            "CreateVehicleFuel": {
                "type": "object",
                "required": ["fuel", "vehicleId"],
                "properties": {
                    "fuel": {
                        "$ref": "#/components/schemas/FuelTypeEnum"
                    },
                    "vehicleId": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    }
                }
            },
            "UpdateVehicleFuel": {
                "type": "object",
                "$ref": "#/components/schemas/CreateVehicleFuel"
            },
            "Pagination": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "format": "int32",
                        "minLength": 0,
                        "default": 0
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32",
                        "minLength": 1,
                        "default": 10
                    },
                    "order": {
                        "$ref": "#/components/schemas/SortOrderEnum",
                        "default": "DESC"
                    }
                }
            },
            "SimpleFuelLog": {
                "type": "object",
                "required": ["id", "quantity", "totalPrice", "dateTime"],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "example": "23.23",
                        "minimum": 0
                    },
                    "totalPrice": {
                        "type": "number",
                        "format": "double",
                        "example": "34.26",
                        "minimum": 0
                    },
                    "dateTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    }
                }
            },
            "FuelLog": {
                "type": "object",
                "required": [
                    "id",
                    "quantity",
                    "unitPrice",
                    "totalPrice",
                    "mileage",
                    "dateTime",
                    "full",
                    "previousMissing",
                    "consumption",
                    "vehicleFuelId"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "example": "23.23",
                        "minimum": 0
                    },
                    "unitPrice": {
                        "type": "number",
                        "format": "double",
                        "example": "1.47",
                        "minimum": 0
                    },
                    "totalPrice": {
                        "type": "number",
                        "format": "double",
                        "example": "34.26",
                        "minimum": 0
                    },
                    "mileage": {
                        "type": "number",
                        "format": "double",
                        "example": "65669.34",
                        "minimum": 0
                    },
                    "dateTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    },
                    "full": {
                        "type": "boolean"
                    },
                    "previousMissing": {
                        "type": "boolean"
                    },
                    "consumption": {
                        "type": "number",
                        "format": "double",
                        "description": "Consumption of fuel per 100km calculated by backend",
                        "minimum": 0
                    },
                    "vehicleFuelId": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    }
                }
            },
            "CreateFuelLog": {
                "type": "object",
                "required": [
                    "quantity",
                    "unitPrice",
                    "totalPrice",
                    "mileage",
                    "dateTime",
                    "full",
                    "previousMissing",
                    "vehicleFuelId"
                ],
                "properties": {
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "example": "23.23",
                        "minimum": 0
                    },
                    "unitPrice": {
                        "type": "number",
                        "format": "double",
                        "example": "1.47",
                        "minimum": 0
                    },
                    "totalPrice": {
                        "type": "number",
                        "format": "double",
                        "example": "34.26",
                        "minimum": 0
                    },
                    "mileage": {
                        "type": "number",
                        "format": "double",
                        "example": "65669.34",
                        "minimum": 0
                    },
                    "dateTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    },
                    "full": {
                        "type": "boolean"
                    },
                    "previousMissing": {
                        "type": "boolean"
                    },
                    "vehicleFuelId": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    }
                }
            },
            "UpdateFuelLog": {
                "type": "object",
                "$ref": "#/components/schemas/CreateFuelLog"
            },
            "SimpleExpenseLog": {
                "type": "object",
                "required": ["id", "typeId", "price", "dateTime"],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "example": "23.23",
                        "minimum": 0
                    },
                    "dateTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    },
                    "typeId": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    }
                }
            },
            "ExpenseLog": {
                "type": "object",
                "required": [
                    "id",
                    "price",
                    "mileage",
                    "dateTime",
                    "typeId",
                    "vehicleId"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "example": "23.23",
                        "minimum": 0
                    },
                    "mileage": {
                        "type": "number",
                        "format": "double",
                        "example": "65669.34",
                        "minimum": 0
                    },
                    "dateTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "typeId": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "vehicleId": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    }
                }
            },
            "CreateExpenseLog": {
                "type": "object",
                "required": [
                    "price",
                    "mileage",
                    "dateTime",
                    "typeId",
                    "vehicleId"
                ],
                "properties": {
                    "price": {
                        "type": "number",
                        "format": "double",
                        "example": "23.23",
                        "minimum": 0
                    },
                    "mileage": {
                        "type": "number",
                        "format": "double",
                        "example": "65669.34",
                        "minimum": 0
                    },
                    "dateTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "typeId": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "vehicleId": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    }
                }
            },
            "UpdateExpenseLog": {
                "type": "object",
                "$ref": "#/components/schemas/CreateExpenseLog"
            },
            "ExpensesType": {
                "type": "object",
                "required": ["id", "name"],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    }
                }
            },
            "CreateExpensesType": {
                "type": "object",
                "required": ["name"],
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                    }
                }
            },
            "UpdateExpensesType": {
                "type": "object",
                "$ref": "#/components/schemas/CreateExpensesType"
            },
            "VehicleStatistics": {
                "type": "object",
                "properties": {
                    "mileage": {
                        "type": "number",
                        "format": "double",
                        "example": "65669.34",
                        "minimum": 0
                    },
                    "costOfFuel": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "price": {
                                    "type": "number",
                                    "format": "double",
                                    "example": "23.23",
                                    "minimum": 0
                                },
                                "fuel": {
                                    "$ref": "#/components/schemas/FuelTypeEnum"
                                }
                            }
                        }
                    },
                    "costOfFuelTotal": {
                        "type": "number",
                        "format": "double",
                        "example": "23.23",
                        "description": "Total costs of all fuels",
                        "minimum": 0
                    },
                    "expenses": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "price": {
                                    "type": "number",
                                    "format": "double",
                                    "example": "23.23",
                                    "minimum": 0
                                },
                                "type": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "expensesTotal": {
                        "type": "number",
                        "format": "double",
                        "example": "23.23",
                        "description": "Total expenses",
                        "minimum": 0
                    },
                    "sum": {
                        "type": "number",
                        "format": "double",
                        "example": "23.23",
                        "description": "Sum of expenses and fuel costs",
                        "minimum": 0
                    }
                }
            },
            "Expenses": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "stats": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "price": {
                                    "type": "number",
                                    "format": "double",
                                    "example": "23.23",
                                    "minimum": 0
                                },
                                "date": {
                                    "type": "string",
                                    "description": "Format YYYY-MM"
                                }
                            }
                        }
                    }
                }
            },
            "FuelCosts": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/FuelTypeEnum"
                    },
                    "stats": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "dateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2022-04-10T12:58:33.592Z"
                                },
                                "unitPrice": {
                                    "type": "number",
                                    "format": "double",
                                    "example": "1.23",
                                    "minimum": 0
                                }
                            }
                        }
                    }
                }
            },
            "FuelConsumption": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/FuelTypeEnum"
                    },
                    "stats": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "dateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2022-04-10T12:58:33.592Z"
                                },
                                "consumption": {
                                    "type": "number",
                                    "format": "double",
                                    "example": "7.62",
                                    "minimum": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "responses": {
            "UnauthorizedError": {
                "description": "Access token is missing or invalid. Possibly incorrect credentials.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Object is missing, or required parent doesn't exists.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "General error. Something went wrong on server side.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "UnprocessableEntity": {
                "description": "Request can't be processed because validation failed.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "ServiceUnavailableError": {
                "description": "Request can't be processed because mail service failed.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "ConstraintError": {
                "description": "Constraint or duplicity error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}
